// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Views.VisitEditPane = (function(_super) {

    __extends(VisitEditPane, _super);

    function VisitEditPane() {
      return VisitEditPane.__super__.constructor.apply(this, arguments);
    }

    VisitEditPane.prototype.el = '#visit_edit';

    VisitEditPane.prototype.events = {
      'click .save': 'saveVisit',
      'click .cancel': 'cancelChanges'
    };

    VisitEditPane.prototype.initialize = function() {
      this.template = Handlebars.compile($('#tmpl-visit-edit-pane').html());
      this.model = null;
      return App.Events.on('visit:selected', this.handleVisitSelected, this);
    };

    VisitEditPane.prototype.cancelChanges = function(e) {
      e.preventDefault();
      return this.hideMyself();
    };

    VisitEditPane.prototype.saveVisit = function(e) {
      var new_date, new_time;
      e.preventDefault();
      this.hideMyself();
      new_time = this.$('select').val();
      new_date = moment(this.$('.date').val()).add('h', parseInt(new_time));
      this.model.set('start_time', new_date.toString());
      this.model.setExtendedAttributes();
      return App.Events.trigger('visit:confirmed', this.model);
    };

    VisitEditPane.prototype.handleVisitSelected = function(model) {
      this.showMyself();
      this.model = model;
      return this.render();
    };

    VisitEditPane.prototype.render = function() {
      if (this.model) {
        this.$el.html(this.template(this.model.toJSON()));
        this.$('#visit-edit-datepicker input').datepicker({
          dateFormat: 'M d, yy'
        });
        this.$('#time_drop_down').val(this.model.startTimeAsHours());
      }
      return this;
    };

    VisitEditPane.prototype.hideMyself = function() {
      console.log("hideMyself");
      $("#overlay").hide();
      this.$el.hide();
      return this;
    };

    VisitEditPane.prototype.showMyself = function() {
      $("#overlay").show();
      return this.$el.show();
    };

    return VisitEditPane;

  })(Backbone.View);

}).call(this);
