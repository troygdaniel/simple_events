// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Views.CalendarView = (function(_super) {

    __extends(CalendarView, _super);

    function CalendarView() {
      return CalendarView.__super__.constructor.apply(this, arguments);
    }

    CalendarView.prototype.el = '#visit_calendar';

    CalendarView.prototype.initialize = function() {
      this.collection.on('add', this.handleEventAdded, this);
      return App.Events.on('visit:updated', this.handleVisitUpdated, this);
    };

    CalendarView.prototype.handleEventAdded = function(model) {
      return this.$el.fullCalendar('addEventSource', [model.toCalendar()]);
    };

    CalendarView.prototype.handleVisitUpdated = function(model) {
      var calendar_event;
      if (this.collection.contains(model)) {
        calendar_event = this.$el.fullCalendar('clientEvents', model.cid)[0];
        calendar_event.start = model.get('start_time');
        calendar_event.end = model.get('end_time');
        return this.$el.fullCalendar('updateEvent', calendar_event);
      }
    };

    CalendarView.prototype.render = function() {
      var options;
      options = {
        that: this,
        defaultView: 'agendaWeek',
        allDaySlot: false,
        contentHeight: 500,
        minTime: 7,
        maxTime: 24,
        events: this.collection.toCalendar()
      };
      this.$el.fullCalendar(options);
      return this;
    };

    return CalendarView;

  })(Backbone.View);

}).call(this);
