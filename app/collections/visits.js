// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App.Collections.VisitList = (function(_super) {

    __extends(VisitList, _super);

    function VisitList() {
      return VisitList.__super__.constructor.apply(this, arguments);
    }

    VisitList.prototype.model = App.Models.Visit;

    VisitList.prototype.initialize = function() {
      return App.Events.on('visit:confirmed', this.handleVisitConfirmed, this);
    };

    VisitList.prototype.handleVisitConfirmed = function(savedModel) {
      if (!this.contains(savedModel)) {
        console.log('Confirmed: added');
        return this.add(savedModel);
      }
    };

    VisitList.prototype.comparator = function(visit) {
      return visit.get('date').toDate();
    };

    VisitList.prototype.toCalendar = function() {
      var events;
      events = [];
      _.each(this.models, function(visit) {
        return events.push(visit.toCalendar());
      });
      return events;
    };

    return VisitList;

  })(Backbone.Collection);

}).call(this);
